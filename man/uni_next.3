.TH "UNICORN" "3" "Jan 19th 2025" "Unicorn 1.0.3"
.SH NAME
uni_next \- decode a scalar value
.SH LIBRARY
Embeddable Unicode Algorithms (libunicorn, -lunicorn)
.SH SYNOPSIS
.nf
.B #include <unicorn.h>
.PP
.BI "unistat uni_next(const void *" text ", unisize " text_len ", uniattr " text_attr ", unisize *" index ", unichar *" cp ");"
.fi
.SH DESCRIPTION
Decodes one Unicode scalar value from \f[I]text\f[R] at code unit \f[I]index\f[R] and writes the result to \f[I]cp\f[R].
The \f[I]index\f[R] parameter is updated by the implementation to refer to the code unit beginning the next scalar.
.PP
The number of code units in \f[I]text\f[R] is specified by \f[I]text_len\f[R] and its encoding is specified by \f[I]text_attr\f[R].
If \f[I]text_len\f[R] is negative then \f[I]text\f[R] is assumed to be null terminated.
.PP
This function returns \f[B]UNI_DONE\f[R] when iteration has reached the end of \f[I]text\f[R] otherwise it returns \f[B]UNI_OK\f[R] indicating there are more characters.
If the implementation detects \f[I]text\f[R] is malformed, then it returns \f[B]UNI_BAD_ENCODING\f[R].
.PP
The \f[I]index\f[R] parameter must refer to a code point boundary otherwise the behavior is undefined.
.SH RETURN VALUE
.TP
UNI_OK
If the scalar was successfully decoded.
.TP
UNI_DONE
If the end of \f[I]text\f[R] was reached.
.TP
UNI_BAD_ENCODING
If \f[I]text\f[R] is malformed; this is never returned if \f[I]text_attr\f[R] has \f[B]UNI_TRUST\f[R](3).
.TP
UNI_BAD_OPERATION
If \f[I]text\f[R], \f[I]index\f[R], or \f[I]cp\f[R] are NULL.
.SH EXAMPLES
This example prints each Unicode scalar value from a text string encoded as UTF-8.
.PP
.in +4n
.EX
#include <unicorn.h>
#include <stdio.h>

int main(void)
{
    const char str[] = u8"I üïµÔ∏è."; // I spy
    unisize i = 0;
    for (;;)
    {
        unichar cp;
        unistat r = uni_next(str, -1, UNI_UTF8, &i, &cp);
        if (r == UNI_DONE)
        {
            break;
        }
        else if (r == UNI_BAD_ENCODING)
        {
            // malformed character
        }
        else
        {
            printf("U+%04X\\n", cp); // print scalar
        }
    }
    return 0;
}
.EE
.in
.SH SEE ALSO
.BR unistat (3),
.BR UNI_TRUST (3),
.BR unisize (3),
.BR uniattr (3),
.BR unichar (3)
.SH AUTHOR
.UR https://railgunlabs.com
Railgun Labs
.UE .
.SH INTERNET RESOURCES
The online documentation is published on the
.UR https://railgunlabs.com/unicorn
Railgun Labs website
.UE .
.SH LICENSING
Unicorn is distributed with its end-user license agreement (EULA).
Please review the agreement for information on terms & conditions for accessing or otherwise using Unicorn and for a DISCLAIMER OF ALL WARRANTIES.
